NAME:   my-confluent-oss
LAST DEPLOYED: Wed Jul  3 14:08:57 2019
NAMESPACE: default
STATUS: DEPLOYED

RESOURCES:
==> v1beta1/PodDisruptionBudget
NAME                               MIN AVAILABLE  MAX UNAVAILABLE  ALLOWED DISRUPTIONS  AGE
my-confluent-oss-cp-zookeeper-pdb  N/A            1                0                    0s

==> v1/ConfigMap
NAME                                                    DATA  AGE
my-confluent-oss-cp-kafka-jmx-configmap                 1     0s
my-confluent-oss-cp-ksql-server-jmx-configmap           1     0s
my-confluent-oss-cp-ksql-server-ksql-queries-configmap  1     0s
my-confluent-oss-cp-zookeeper-jmx-configmap             1     0s

==> v1/Service
NAME                                    TYPE       CLUSTER-IP     EXTERNAL-IP  PORT(S)            AGE
my-confluent-oss-cp-kafka-headless      ClusterIP  None           <none>       9092/TCP           0s
my-confluent-oss-cp-kafka               ClusterIP  10.43.92.153   <none>       9092/TCP           0s
my-confluent-oss-cp-ksql-server         ClusterIP  10.43.115.126  <none>       8088/TCP           0s
my-confluent-oss-cp-zookeeper-headless  ClusterIP  None           <none>       2888/TCP,3888/TCP  0s
my-confluent-oss-cp-zookeeper           ClusterIP  10.43.113.118  <none>       2181/TCP           0s

==> v1beta2/Deployment
NAME                             DESIRED  CURRENT  UP-TO-DATE  AVAILABLE  AGE
my-confluent-oss-cp-ksql-server  1        1        1           0          0s

==> v1beta1/StatefulSet
NAME                           DESIRED  CURRENT  AGE
my-confluent-oss-cp-kafka      3        1        0s
my-confluent-oss-cp-zookeeper  3        1        0s

==> v1/Pod(related)
NAME                                              READY  STATUS             RESTARTS  AGE
my-confluent-oss-cp-ksql-server-55b5c57d77-w2z9r  0/2    ContainerCreating  0         0s
my-confluent-oss-cp-kafka-0                       0/2    ContainerCreating  0         0s
my-confluent-oss-cp-zookeeper-0                   0/2    ContainerCreating  0         0s


NOTES:
## ------------------------------------------------------
## Zookeeper
## ------------------------------------------------------
Connection string for Confluent Kafka:
  my-confluent-oss-cp-zookeeper-0.my-confluent-oss-cp-zookeeper-headless:2181,my-confluent-oss-cp-zookeeper-1.my-confluent-oss-cp-zookeeper-headless:2181,...

To connect from a client pod:

1. Deploy a zookeeper client pod with configuration:

    apiVersion: v1
    kind: Pod
    metadata:
      name: zookeeper-client
      namespace: default
    spec:
      containers:
      - name: zookeeper-client
        image: confluentinc/cp-zookeeper:5.0.1
        command:
          - sh
          - -c
          - "exec tail -f /dev/null"

2. Log into the Pod

  kubectl exec -it zookeeper-client -- /bin/bash

3. Use zookeeper-shell to connect in the zookeeper-client Pod:

  zookeeper-shell my-confluent-oss-cp-zookeeper:2181

4. Explore with zookeeper commands, for example:

  # Gives the list of active brokers
  ls /brokers/ids

  # Gives the list of topics
  ls /brokers/topics

  # Gives more detailed information of the broker id '0'
  get /brokers/ids/0## ------------------------------------------------------
## Kafka
## ------------------------------------------------------
To connect from a client pod:

1. Deploy a kafka client pod with configuration:

    apiVersion: v1
    kind: Pod
    metadata:
      name: kafka-client
      namespace: default
    spec:
      containers:
      - name: kafka-client
        image: confluentinc/cp-kafka:5.0.1
        command:
          - sh
          - -c
          - "exec tail -f /dev/null"

2. Log into the Pod

  kubectl exec -it kafka-client -- /bin/bash

3. Explore with kafka commands:

  # Create the topic
  kafka-topics --zookeeper my-confluent-oss-cp-zookeeper-headless:2181 --topic my-confluent-oss-topic --create --partitions 1 --replication-factor 1 --if-not-exists

  # Create a message
  MESSAGE="`date -u`"

  # Produce a test message to the topic
  echo "$MESSAGE" | kafka-console-producer --broker-list my-confluent-oss-cp-kafka-headless:9092 --topic my-confluent-oss-topic

  # Consume a test message from the topic
  kafka-console-consumer --bootstrap-server my-confluent-oss-cp-kafka-headless:9092 --topic my-confluent-oss-topic --from-beginning --timeout-ms 2000 --max-messages 1 | grep "$MESSAGE"
